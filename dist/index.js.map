{"version":3,"sources":["../src/index.jsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  func, string, oneOfType, number, bool,\n} from 'prop-types';\n\nconst styles={\n  inlineEdit: {\n    textDecoration: 'underline dotted',\n    cursor: 'pointer',\n  },\n  inputWrapper: {\n    position: 'relative',\n  },\n  inputWrapperInput: {\n    width: '100%',\n    margin: 0,\n    padding: '.5rem',\n  },\n  inputWrapperActions: {\n    position: 'absolute',\n    width: '100%',\n    display: 'flex',\n    color: 'white',\n  },\n  inputWrapperActionsButton: {\n    flex: '0 0 50%',\n    border: 'none',\n    padding: '.5rem',\n    color: 'white',\n    textTransform: 'uppercase',\n  },\n};\n\nconst getValueByType = (value, type) => {\n  if (type === 'number') {\n    try {\n      const number = Number(value);\n      if (Number.isNaN(number)) {\n        return null;\n      }\n\n      return number;\n    } catch (e) {\n      return value;\n    }\n  }\n\n  return value;\n};\n\n/**\n * @param  {any} value passed in.\n * @param  {function} format Function used to format value.\n * @return {any} initial value or formated value\n */\nconst getFormatedValue = (value, format) => {\n  if (!format) {\n    return value;\n  }\n\n  return format(value);\n};\n\n/**\n * InlineEdit component\n */\nclass InlineEdit extends PureComponent {\n  /**\n   * Component constructor\n   * @param  {object} props initial props\n   * @return {void}\n   */\n  constructor(props) {\n    super(props);\n    const {\n      value,\n      type,\n    } = this.props;\n    const valueToUse = getValueByType(value, type);\n\n    this.state = {\n      value: valueToUse,\n      edit: false,\n    };\n\n    this.toggleMode = this.toggleMode.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.save = this.save.bind(this);\n    this.change = this.change.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.inputRef = React.createRef();\n  }\n\n  /**\n   * If pressing Enter or Escape save and close or close.\n   * @param {ev} ev - on key down event\n   * @return {void}\n   */\n  handleKeyDown(ev) {\n    if (ev.key === 'Enter') {\n      this.save();\n      return;\n    }\n\n    if (ev.key === 'Escape') {\n      this.cancel();\n      return;\n    }\n  }\n\n  /**\n   * @param  {object} nextProps Props sent by the parent component.\n   * @return {void}\n   */\n  componentDidUpdate() {\n    const {\n      updateOnNewProps,\n      value,\n    } = this.props;\n\n    const {\n      edit,\n    } = this.state;\n\n    if (!updateOnNewProps) {\n      return;\n    }\n\n    if (edit) {\n      return;\n    }\n\n    this.setState({\n      value: value,\n    });\n  }\n\n  /**\n   * Toggle Edit and view modes\n   * @param  {boolean} edit\n   * @return {void}\n   */\n  toggleMode(edit) {\n    this.setState({ edit }, () => {\n     if (edit && this.inputRef && this.inputRef.current) {\n        this.inputRef.current.focus();\n      }\n    });\n  }\n\n  /**\n   * @return {void}\n   */\n  save() {\n    this.setState({\n      edit: false,\n    }, () => this.props.onSave(this.state.value));\n  }\n\n  /**\n   * @return {void}\n   */\n  cancel() {\n    this.setState({\n      edit: false,\n      value: this.props.value,\n    });\n  }\n\n  /**\n   * @param  {object} ev Event returned by the input\n   * @return {void}\n   */\n  change(ev) {\n    const {\n      type,\n    } = this.props;\n    this.setState({\n      value: getValueByType(ev.target.value, type),\n    });\n  }\n\n  /**\n   * @return {void}\n   */\n  render() {\n    const {\n      tag,\n      type,\n      format,\n      minDate,\n      maxDate,\n    } = this.props;\n\n    const {\n      value,\n    } = this.state;\n\n    const Tag = tag;\n    const Input = type === 'textarea' ? 'textarea' : 'input';\n    const additionalProps = {};\n\n    if (type === 'date') {\n      additionalProps.min = minDate;\n      additionalProps.max = maxDate;\n    }\n\n    return (\n      <div className=\"inline-edit\" style={styles.inlineEdit}>\n        {this.state.edit ?\n          <div className=\"input-wrapper\" style={styles.inputWrapper}>\n            <Input\n              onKeyDownCapture={this.handleKeyDown}\n              ref={this.inputRef}\n              style={styles.inputWrapperInput}\n              type={this.props.type}\n              value={this.state.value}\n              onChange={this.change}\n              {...additionalProps}\n            />\n            <div className=\"actions\" style={styles.inputWrapperActions}>\n              <button\n                style={{\n                  ...styles.inputWrapperActionsButton,\n                  backgroundColor: this.props.saveColor,\n                }}\n                className=\"save\"\n                onClick={this.save}\n              >{this.props.saveLabel}</button>\n              <button\n                style={{\n                  ...styles.inputWrapperActionsButton,\n                  backgroundColor: this.props.cancelColor,\n                }}\n                className=\"cancel\"\n                onClick={this.cancel}\n              >{this.props.cancelLabel}</button>\n            </div>\n          </div> :\n          <Tag\n            className=\"tag-wrapper\"\n            onClick={() => this.toggleMode(true)}\n          >\n            {\n              getFormatedValue(value, format)\n            }\n          </Tag>\n        }\n      </div>\n    );\n  }\n}\n\nInlineEdit.propTypes = {\n  value: oneOfType([string, number]),\n  format: func,\n  tag: string,\n  type: string,\n  onSave: func,\n  updateOnNewProps: bool,\n  saveColor: string,\n  saveLabel: string,\n  cancelColor: string,\n  cancelLabel: string,\n  getValue: func,\n};\n\nInlineEdit.defaultProps = {\n  value: '',\n  format: null,\n  tag: 'span',\n  type: 'text',\n  onSave: null,\n  updateOnNewProps: false,\n  saveColor: 'blue',\n  saveLabel: 'Save',\n  cancelColor: 'red',\n  cancelLabel: 'Cancel',\n  getValue: null,\n  minDate: '',\n  maxDate: '',\n};\n\nexport default InlineEdit;\n"]}